name: Edge release


on:
  push:
    branches:
    - dev
    tags:
    - v*


jobs:
  build-linux:
    runs-on: ubuntu-20.04
    container: "ubuntu:20.04"

    steps:
    - name: Bootstrap
      run: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update -yq
        apt-get install -yq git

    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        submodules: recursive

    - name: Build
      run: setup/ci/build/build-linux.sh
      env:
        EXTERNAL_DATA_URL: ${{ secrets.EXTERNAL_DATA_URL }}
        EXTERNAL_DATA_PASSWORD: ${{ secrets.EXTERNAL_DATA_PASSWORD }}

    - name: Save
      uses: actions/upload-artifact@v2
      with:
        name: release-linux
        path: "*.AppImage"


  build-windows:
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        submodules: recursive

    - name: Set up MSYS2 PATH
      run: echo C:\msys64\usr\bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build
      run: setup/ci/build/build-windows.sh
      shell: bash --login -eo pipefail "{0}"
      env:
        MSYSTEM: MINGW64
        CHERE_INVOKING: 1
        MSYS2_PATH_TYPE: inherit
        EXTERNAL_DATA_URL: ${{ secrets.EXTERNAL_DATA_URL }}
        EXTERNAL_DATA_PASSWORD: ${{ secrets.EXTERNAL_DATA_PASSWORD }}

    - name: Save
      uses: actions/upload-artifact@v2
      with:
        name: release-windows
        path: "*-setup.exe"


  build-osx:
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        submodules: recursive

    - name: Build
      run: setup/ci/build/build-osx.sh
      env:
        EXTERNAL_DATA_URL: ${{ secrets.EXTERNAL_DATA_URL }}
        EXTERNAL_DATA_PASSWORD: ${{ secrets.EXTERNAL_DATA_PASSWORD }}

    - name: Save
      uses: actions/upload-artifact@v2
      with:
        name: release-osx
        path: "*.pkg"


  release:
    needs:
    - build-linux
    - build-windows
    - build-osx

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Download
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Release
      run: .github/workflows/release.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
